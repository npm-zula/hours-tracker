---
interface Props {
  id: string;
  name: string;
  label: string;
  required?: boolean;
  defaultValue?: string;
}

const { id, name, label, required = false, defaultValue } = Astro.props;

// Convert defaultValue (if exists) to date and hours
let defaultDate = '';
let defaultHours = '';
if (defaultValue) {
  const date = new Date(defaultValue);
  defaultDate = date.toISOString().split('T')[0];
  defaultHours = date.getHours().toString().padStart(2, '0');
}
---

<div class="space-y-2">
  <label for={id} class="block text-sm font-medium text-gray-700">{label}</label>
  <div class="flex flex-wrap gap-2">
    <div class="flex-[2]">
      <input
        type="date"
        id={`${id}-date`}
        name={`${name}-date`}
        value={defaultDate}
        required={required}
        class="w-full px-4 py-2 border rounded-lg focus:ring-primary-500 focus:border-primary-500"
      />
    </div>
    <div class="relative flex-1">
      <input
        type="number"
        id={`${id}-hours`}
        name={`${name}-hours`}
        min="0"
        max="23"
        placeholder="HH"
        value={defaultHours}
        required={required}
        class="w-full pl-4 pr-8 py-2 border rounded-lg focus:ring-primary-500 focus:border-primary-500"
      />
      <span class="absolute right-3 top-1/2 -translate-y-1/2 text-gray-500">h</span>
    </div>
  </div>
</div>

<script define:vars={{ id, name }}>
  const dateInput = document.getElementById(`${id}-date`);
  const hoursInput = document.getElementById(`${id}-hours`);
  const hiddenInput = document.createElement('input');
  hiddenInput.type = 'hidden';
  hiddenInput.name = name;
  hiddenInput.id = id;
  dateInput?.parentElement?.parentElement?.appendChild(hiddenInput);

  function updateDateTime() {
    const date = dateInput?.value || new Date().toISOString().split('T')[0];
    const hours = hoursInput?.value.padStart(2, '0') || '00';
    
    const dateTime = new Date(`${date}T${hours}:00:00`);
    hiddenInput.value = dateTime.toISOString();
  }

  // Add event listeners
  dateInput?.addEventListener('input', updateDateTime);

  hoursInput?.addEventListener('input', (e) => {
    const input = e.target;
    let value = parseInt(input.value);
    
    if (value > 23) input.value = '23';
    if (value < 0) input.value = '0';
    
    updateDateTime();
  });

  // Initialize
  updateDateTime();
</script> 