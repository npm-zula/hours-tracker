---
import Layout from '../../layouts/Layout.astro';
import TimeInput from '../../components/TimeInput.astro';
import { supabase } from '../../lib/supabase';

// Fetch projects for the select input
const { data: projects } = await supabase
  .from('projects')
  .select('*')
  .order('name');

// Get current time for default value
const now = new Date();
---

<Layout title="New Time Entry">
  <div class="max-w-2xl mx-auto">
    <h1 class="text-2xl font-bold text-primary-800 mb-8">New Time Entry</h1>
    
    <form id="entry-form" class="space-y-6">
      <div>
        <label for="project" class="block text-sm font-medium text-gray-700">Project</label>
        <select
          id="project"
          name="project_id"
          required
          class="mt-1 block w-full rounded-lg"
        >
          <option value="">Select a project</option>
          {projects?.map((project) => (
            <option value={project.id}>{project.name}</option>
          ))}
        </select>
      </div>

      <div>
        <label for="description" class="block text-sm font-medium text-gray-700">Description</label>
        <textarea
          id="description"
          name="description"
          required
          rows="3"
          class="mt-1 block w-full rounded-lg"
          placeholder="What are you working on?"
        ></textarea>
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <TimeInput
          id="start_time"
          name="start_time"
          label="Start Time"
          required={true}
          defaultValue={now.toISOString()}
        />
        
        <TimeInput
          id="end_time"
          name="end_time"
          label="End Time"
          required={false}
        />
      </div>

      <div class="flex justify-end gap-4">
        <a href="/entries" class="btn btn-secondary">Cancel</a>
        <button type="submit" class="btn btn-primary">
          Save Entry
        </button>
      </div>
    </form>
  </div>
</Layout>

<script>
  import { supabase } from '../../lib/supabase';

  const form = document.getElementById('entry-form') as HTMLFormElement;

  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = new FormData(form);
    const entry = {
      project_id: formData.get('project_id'),
      description: formData.get('description'),
      start_time: formData.get('start_time'),
      end_time: formData.get('end_time') || null
    };

    const { error } = await supabase
      .from('time_entries')
      .insert([entry]);

    if (error) {
      alert('Error saving entry: ' + error.message);
    } else {
      window.location.href = '/entries';
    }
  });
</script> 