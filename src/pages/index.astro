---
import Layout from '../layouts/Layout.astro';
import Modal from '../components/Modal.astro';
import RecentStats from '../components/RecentStats.astro';
import { supabase } from '../lib/supabase';

// Fetch time entries for the current month
const startOfMonth = new Date();
startOfMonth.setDate(1);
startOfMonth.setHours(0, 0, 0, 0);

const { data: monthEntries } = await supabase
  .from('time_entries')
  .select(`
    *,
    project:projects(name, rate_per_hour)
  `)
  .gte('start_time', startOfMonth.toISOString())
  .order('start_time', { ascending: false });

// Calculate monthly stats
const monthlyStats = monthEntries?.reduce(
  (acc, entry) => {
    if (entry.end_time) {
      const duration = (new Date(entry.end_time).getTime() - new Date(entry.start_time).getTime()) / (1000 * 60 * 60);
      acc.totalHours += duration;
      if (entry.project?.rate_per_hour) {
        acc.totalEarnings += duration * entry.project.rate_per_hour;
      }
    }
    return acc;
  },
  { totalHours: 0, totalEarnings: 0 }
);

// Get active entries (no end time)
const activeEntries = monthEntries?.filter(entry => !entry.end_time) || [];
---

<Layout title="Home">
  <div class="space-y-8">
    <div class="flex justify-between items-center">
      <h1 class="text-2xl font-bold text-primary-800">Dashboard</h1>
      <button
        id="show-recent-stats"
        class="btn btn-primary"
      >
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2 2v6a2 2 0 002 2h2a2 2 0 002-2zm0 0V9a2 2 0 012-2h2a2 2 0 012 2v10m-6 0a2 2 0 002 2h2a2 2 0 002-2m0 0V5a2 2 0 012-2h2a2 2 0 012 2v14a2 2 0 01-2 2h-2a2 2 0 01-2-2z" />
        </svg>
        Last 2 Weeks Stats
      </button>
    </div>

    <!-- Monthly Overview -->
    <div class="grid grid-cols-1 md:grid-cols-3 gap-6 max-w-4xl mx-auto">
      <div class="card p-6 text-center">
        <h3 class="text-lg font-medium text-secondary-600 mb-2">This Month</h3>
        <p class="text-3xl font-bold text-primary-800">
          {monthlyStats?.totalHours.toFixed(1)}
        </p>
      </div>

      {monthlyStats?.totalEarnings > 0 && (
        <div class="card p-6 text-center">
          <h3 class="text-lg font-medium text-secondary-600 mb-2">Earnings</h3>
          <p class="text-3xl font-bold text-accent-600">
            ${monthlyStats.totalEarnings.toFixed(2)}
          </p>
        </div>
      )}

      <div class="card p-6 text-center">
        <h3 class="text-lg font-medium text-secondary-600 mb-2">Active Tasks</h3>
        <p class="text-3xl font-bold text-primary-800">
          {activeEntries.length}
        </p>
      </div>
    </div>

    <!-- Quick Actions -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 max-w-4xl mx-auto">
      <a
        href="/entries/new"
        class="card group p-6 hover:border-primary-200"
      >
        <div class="space-y-4">
          <div class="w-12 h-12 bg-primary-100 rounded-full flex items-center justify-center group-hover:bg-primary-200 transition-colors">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-primary-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6" />
            </svg>
          </div>
          <div>
            <h2 class="text-xl font-semibold text-primary-800">New Time Entry</h2>
            <p class="text-secondary-600 mt-1">Start tracking time for your current task.</p>
          </div>
        </div>
      </a>

      <a
        href="/entries"
        class="card group p-6 hover:border-accent-200"
      >
        <div class="space-y-4">
          <div class="w-12 h-12 bg-accent-100 rounded-full flex items-center justify-center group-hover:bg-accent-200 transition-colors">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6 text-accent-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2" />
            </svg>
          </div>
          <div>
            <h2 class="text-xl font-semibold text-primary-800">View Entries</h2>
            <p class="text-secondary-600 mt-1">Review and manage your time entries.</p>
          </div>
        </div>
      </a>
    </div>

    {activeEntries.length > 0 && (
      <div class="max-w-4xl mx-auto">
        <h2 class="text-xl font-semibold text-primary-800 mb-4">Active Tasks</h2>
        <div class="space-y-4">
          {activeEntries.map(entry => (
            <div class="card p-4 flex items-center justify-between">
              <div>
                <p class="font-medium text-primary-800">{entry.project?.name}</p>
                <p class="text-sm text-secondary-600">{entry.description}</p>
              </div>
              <div class="text-right">
                <p class="text-sm text-secondary-600">Started</p>
                <p class="font-medium">{new Date(entry.start_time).toLocaleTimeString()}</p>
              </div>
            </div>
          ))}
        </div>
      </div>
    )}
  </div>

  <Modal id="recent-stats-modal" title="Last 2 Weeks Statistics">
    <RecentStats />
  </Modal>
</Layout>

<script>
  const showStatsButton = document.getElementById('show-recent-stats');
  const modal = document.getElementById('recent-stats-modal');

  showStatsButton?.addEventListener('click', () => {
    modal?.classList.remove('hidden');
  });
</script>
