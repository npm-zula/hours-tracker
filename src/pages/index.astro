---
import Layout from '../layouts/Layout.astro';
import { supabase } from '../lib/supabase';
import type { TimeEntry } from '../lib/supabase';
import RecentStats from '../components/RecentStats.astro';

// Fetch time entries for the current month
const startOfMonth = new Date();
startOfMonth.setDate(1);
startOfMonth.setHours(0, 0, 0, 0);

const { data: monthEntries } = await supabase
  .from('time_entries')
  .select(`
    *,
    project:projects(name, rate_per_hour)
  `)
  .gte('start_time', startOfMonth.toISOString())
  .order('start_time', { ascending: false });

// Get active entries (no end time)
const activeEntries = monthEntries?.filter(entry => !entry.end_time) || [];

// Calculate monthly stats
const monthlyStats = monthEntries?.reduce(
  (acc, entry) => {
    if (entry.end_time) {
      const duration = (new Date(entry.end_time).getTime() - new Date(entry.start_time).getTime()) / (1000 * 60 * 60);
      acc.totalHours += duration;
      if (entry.project?.rate_per_hour) {
        acc.totalEarnings += duration * entry.project.rate_per_hour;
      }
    }
    return acc;
  },
  { totalHours: 0, totalEarnings: 0 }
);

// Get unique projects for the month
const uniqueProjects = new Set(monthEntries?.map(entry => entry.project?.name).filter(Boolean));

// Get recent entries (last 5 completed entries)
const recentEntries = monthEntries?.filter(entry => entry.end_time).slice(0, 5) || [];
---

<Layout title="Dashboard">
  <!-- Page Heading -->
  <div class="flex justify-between items-center mb-8">
    <h1 class="text-2xl font-bold text-gray-800">Dashboard</h1>
    <div class="flex gap-3">
      <!-- 2 Week Stats Button -->
      <button type="button" data-hs-overlay="#recent-stats-modal" class="py-3 px-4 inline-flex items-center gap-x-2 text-sm font-semibold rounded-lg border border-gray-200 bg-white text-gray-800 shadow-sm hover:bg-gray-50 disabled:opacity-50 disabled:pointer-events-none">
        <svg class="flex-shrink-0 w-4 h-4" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M3 3v18h18"/>
          <path d="m19 9-5 5-4-4-3 3"/>
        </svg>
        Last 2 Weeks Stats
      </button>

      <!-- New Entry Button -->
      <a href="/entries/new" class="py-3 px-4 inline-flex items-center gap-x-2 text-sm font-semibold rounded-lg border border-transparent bg-blue-600 text-white hover:bg-blue-700 disabled:opacity-50 disabled:pointer-events-none">
        <svg class="flex-shrink-0 w-4 h-4" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
          <path d="M12 5v14M5 12h14"/>
        </svg>
        New Time Entry
      </a>
    </div>
  </div>

  <!-- Stats Cards -->
  <div class="grid sm:grid-cols-2 lg:grid-cols-4 gap-4 mb-8">
    <!-- Total Hours -->
    <div class="flex flex-col bg-white border shadow-sm rounded-xl">
      <div class="p-4 md:p-5">
        <div class="flex items-center gap-x-2">
          <span class="text-xs font-semibold uppercase text-gray-600">
            Monthly Hours
          </span>
        </div>
        <div class="mt-1 flex items-center gap-x-2">
          <h3 class="text-xl sm:text-2xl font-medium text-gray-800">
            {monthlyStats?.totalHours.toFixed(1)}h
          </h3>
        </div>
      </div>
    </div>

    <!-- Total Earnings -->
    <div class="flex flex-col bg-white border shadow-sm rounded-xl">
      <div class="p-4 md:p-5">
        <div class="flex items-center gap-x-2">
          <span class="text-xs font-semibold uppercase text-gray-600">
            Monthly Earnings
          </span>
        </div>
        <div class="mt-1 flex items-center gap-x-2">
          <h3 class="text-xl sm:text-2xl font-medium text-green-600">
            ${monthlyStats?.totalEarnings.toFixed(2)}
          </h3>
        </div>
      </div>
    </div>

    <!-- Active Projects -->
    <div class="flex flex-col bg-white border shadow-sm rounded-xl">
      <div class="p-4 md:p-5">
        <div class="flex items-center gap-x-2">
          <span class="text-xs font-semibold uppercase text-gray-600">
            Active Projects
          </span>
        </div>
        <div class="mt-1 flex items-center gap-x-2">
          <h3 class="text-xl sm:text-2xl font-medium text-gray-800">
            {uniqueProjects.size}
          </h3>
        </div>
      </div>
    </div>

    <!-- Active Tasks -->
    <div class="flex flex-col bg-white border shadow-sm rounded-xl">
      <div class="p-4 md:p-5">
        <div class="flex items-center gap-x-2">
          <span class="text-xs font-semibold uppercase text-gray-600">
            Active Tasks
          </span>
        </div>
        <div class="mt-1 flex items-center gap-x-2">
          <h3 class="text-xl sm:text-2xl font-medium text-gray-800">
            {activeEntries.length}
          </h3>
        </div>
      </div>
    </div>
  </div>

  <div class="grid lg:grid-cols-2 gap-8">
    <!-- Active Tasks Section -->
    {activeEntries.length > 0 && (
      <div class="flex flex-col bg-white border shadow-sm rounded-xl">
        <div class="bg-gray-100 border-b rounded-t-xl py-3 px-4 md:py-4 md:px-5">
          <h3 class="font-semibold text-gray-800">Active Tasks</h3>
        </div>
        <div class="p-4 md:p-5">
          <div class="divide-y">
            {activeEntries.map(entry => (
              <div class="py-3 first:pt-0 last:pb-0">
                <div class="flex items-center justify-between">
                  <div>
                    <h4 class="font-medium text-gray-800">{entry.project?.name}</h4>
                    <p class="text-sm text-gray-600 mt-1">{entry.description}</p>
                  </div>
                  <div class="text-right">
                    <span class="inline-flex items-center gap-x-1 py-1 px-2 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                      Started {new Date(entry.start_time).toLocaleTimeString()}
                    </span>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>
    )}

    <!-- Recent Entries -->
    <div class="flex flex-col bg-white border shadow-sm rounded-xl">
      <div class="bg-gray-100 border-b rounded-t-xl py-3 px-4 md:py-4 md:px-5">
        <h3 class="font-semibold text-gray-800">Recent Entries</h3>
      </div>
      <div class="p-4 md:p-5">
        <div class="divide-y">
          {recentEntries.map(entry => {
            const duration = entry.end_time 
              ? (new Date(entry.end_time).getTime() - new Date(entry.start_time).getTime()) / (1000 * 60 * 60)
              : 0;
            const amount = entry.project?.rate_per_hour ? duration * entry.project.rate_per_hour : 0;

            return (
              <div class="py-3 first:pt-0 last:pb-0">
                <div class="flex items-center justify-between">
                  <div>
                    <h4 class="font-medium text-gray-800">{entry.project?.name}</h4>
                    <p class="text-sm text-gray-600 mt-1">{entry.description}</p>
                    <p class="text-xs text-gray-500 mt-1">
                      {new Date(entry.start_time).toLocaleDateString()} • {duration.toFixed(1)}h • ${amount.toFixed(2)}
                    </p>
                  </div>
                </div>
              </div>
            );
          })}
        </div>
      </div>
    </div>
  </div>

  <!-- Recent Stats Modal -->
  <div id="recent-stats-modal" class="hs-overlay hidden w-full h-full fixed top-0 start-0 z-[80] overflow-x-hidden overflow-y-auto pointer-events-none">
    <div class="hs-overlay-open:mt-7 hs-overlay-open:opacity-100 hs-overlay-open:duration-500 mt-0 opacity-0 ease-out transition-all sm:max-w-4xl sm:w-full m-3 sm:mx-auto min-h-[calc(100%-3.5rem)] flex items-center">
      <div class="w-full flex flex-col bg-white border shadow-sm rounded-xl pointer-events-auto">
        <!-- Header -->
        <div class="flex justify-between items-center py-3 px-4 border-b">
          <h3 class="font-bold text-gray-800">Last 2 Weeks Statistics</h3>
          <button type="button" class="flex justify-center items-center w-7 h-7 text-sm font-semibold rounded-full border border-transparent text-gray-800 hover:bg-gray-100 disabled:opacity-50 disabled:pointer-events-none" data-hs-overlay="#recent-stats-modal">
            <span class="sr-only">Close</span>
            <svg class="flex-shrink-0 w-4 h-4" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="M18 6 6 18"/><path d="m6 6 12 12"/></svg>
          </button>
        </div>

        <!-- Body -->
        <div class="p-4 overflow-y-auto">
          <RecentStats />
        </div>

        <!-- Footer -->
        <div class="flex justify-end items-center gap-x-2 py-3 px-4 border-t">
          <button type="button" class="py-2 px-3 inline-flex items-center gap-x-2 text-sm font-medium rounded-lg border border-gray-200 bg-white text-gray-800 shadow-sm hover:bg-gray-50 disabled:opacity-50 disabled:pointer-events-none" data-hs-overlay="#recent-stats-modal">
            Close
          </button>
        </div>
      </div>
    </div>
  </div>
</Layout>

<!-- Initialize Preline Modal -->
<script>
  import 'preline/dist/preline.js';
</script>
