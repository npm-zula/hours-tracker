---
import Layout from '../layouts/Layout.astro';
import Toast from '../components/Toast.astro';
---

<Layout title="Projects - Hours Tracker">
  <div class="space-y-8">
    <!-- Add Project Form -->
    <div class="bg-white dark:bg-gray-800 shadow-sm rounded-lg p-6">
      <h2 class="text-xl font-bold text-gray-900 dark:text-white mb-4">Add New Project</h2>
      <form id="project-form" class="space-y-4">
        <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
          <div class="col-span-2">
            <label for="name" class="block text-sm font-medium text-gray-700 dark:text-gray-300">
              Project Name
            </label>
            <input
              type="text"
              id="name"
              name="name"
              required
              class="mt-1 block w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
              placeholder="Enter project name"
            />
          </div>
          <div>
            <label for="color" class="block text-sm font-medium text-gray-700 dark:text-gray-300">
              Color
            </label>
            <input
              type="color"
              id="color"
              name="color"
              required
              class="mt-1 h-10 block w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
            />
          </div>
        </div>
        <div>
          <label for="hourlyRate" class="block text-sm font-medium text-gray-700 dark:text-gray-300">
            Hourly Rate (Optional)
          </label>
          <div class="mt-1 relative rounded-md shadow-sm">
            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
              <span class="text-gray-500 sm:text-sm">$</span>
            </div>
            <input
              type="number"
              name="hourlyRate"
              id="hourlyRate"
              min="0"
              step="0.01"
              class="pl-7 block w-full rounded-md border-gray-300 dark:border-gray-600 dark:bg-gray-700 shadow-sm focus:border-indigo-500 focus:ring-indigo-500"
              placeholder="0.00"
            />
          </div>
        </div>
        <div class="flex justify-end">
          <button
            type="submit"
            class="inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
          >
            Add Project
          </button>
        </div>
      </form>
    </div>

    <!-- Projects List -->
    <div class="bg-white dark:bg-gray-800 shadow-sm rounded-lg p-6">
      <h2 class="text-xl font-bold text-gray-900 dark:text-white mb-4">Projects</h2>
      <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200 dark:divide-gray-700">
          <thead>
            <tr>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                Project
              </th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                Color
              </th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                Total Hours
              </th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                Hourly Rate
              </th>
              <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-400 uppercase tracking-wider">
                Total Earnings
              </th>
            </tr>
          </thead>
          <tbody id="projects-table" class="divide-y divide-gray-200 dark:divide-gray-700">
          </tbody>
        </table>
      </div>
    </div>
  </div>
</Layout>

<script>
  import { addProject, getProjects, getTimeEntries, calculateTotalHours } from '../lib/db';

  const form = document.getElementById('project-form') as HTMLFormElement;
  const projectsTable = document.getElementById('projects-table') as HTMLTableSectionElement;
  
  async function loadData() {
    try {
      const [projects, timeEntries] = await Promise.all([getProjects(), getTimeEntries()]);
      
      const projectHours = projects.map(project => {
        const entries = timeEntries.filter(entry => entry.projectId === project.id);
        return {
          ...project,
          totalHours: calculateTotalHours(entries)
        };
      });

      projectsTable.innerHTML = projectHours.map(project => `
        <tr>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white">
            ${project.name}
          </td>
          <td class="px-6 py-4 whitespace-nowrap">
            <div class="w-6 h-6 rounded-full" style="background-color: ${project.color}"></div>
          </td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white">
            ${project.totalHours.toFixed(2)}
          </td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white">
            ${project.hourlyRate ? `$${project.hourlyRate.toFixed(2)}` : '-'}
          </td>
          <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white">
            ${project.hourlyRate
              ? `$${(project.totalHours * project.hourlyRate).toFixed(2)}`
              : '-'}
          </td>
        </tr>
      `).join('');
    } catch (error) {
      console.error('Error loading data:', error);
    }
  }

  // Load initial data
  loadData();
  
  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = new FormData(form);
    const name = formData.get('name') as string;
    const color = formData.get('color') as string;
    const hourlyRateStr = formData.get('hourlyRate') as string;
    const hourlyRate = hourlyRateStr ? parseFloat(hourlyRateStr) : undefined;
    
    if (name && color) {
      try {
        await addProject({
          name,
          color,
          hourlyRate
        });
        
        // Reset form
        form.reset();
        
        // Reload data
        await loadData();
      } catch (error) {
        console.error('Error adding project:', error);
      }
    }
  });
</script> 